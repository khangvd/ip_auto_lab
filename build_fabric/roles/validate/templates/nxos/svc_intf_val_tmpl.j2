{##### From the input variables generates a validation file (expected state) used by custom_validate to validate actual state #####}
{####### Validates the tenant information, so the configuration as applied from services_interface.yml by the svc_intf role ######}
{########## Block statements inherit info from svc_rtr_val_tmpl.j2 template and pass it to bse_tnt_val_tmpl  #########}

{# Adds the results of this rendered file into the svc_tnt_val_tmpl file #}
{% extends ansible_network_os + "/svc_tnt_val_tmpl.j2" %}

cmds:
{### show port-channel summary ###}
{% block show_port_channel_summary %}{% for intf in flt_svc_intf %}{% if intf['po_num'] is defined %}
      {{ fbc.adv.bse_intf.ec_fmt + intf.po_num |string }}:
        oper_status: U
{% if intf['po_mode'] == 'on' %}
        protocol: NONE
{% else %}
        protocol: LACP
{% endif %}
        members:
          _mode: strict
          {{ intf.intf_num }}:
            mbr_status: P
{% endif %}{% endfor %}{% endblock %}


{### show vpc ###}
{% block show_vpc %}
{{ super() }}
{% for intf in flt_svc_intf %}{% if intf.vpc_num is defined %}
      {{ intf.intf_num | replace(fbc.adv.bse_intf.ec_fmt,fbc.adv.bse_intf.ec_short) }}:
        consistency_status: SUCCESS
        port_status: "1"
        vpc_num: "{{ intf.vpc_num }}"
        active_vlans: {{ intf.ip_vlan }}
{% endif %}{% endfor %}{% endblock %}


{### show interfaces_trunk ###}
{% block show_int_trunk %}
{{ super() }}
{% for intf in flt_svc_intf %}{% if 'trunk' in intf.type %}
      {{ intf.intf_num  }}:
        allowed_vlans: {{ intf.ip_vlan }}
{% if intf.po_num is not defined %}
        stpfwd_vlans: {{ intf.ip_vlan }}
{% else %}
        stpfwd_vlans: none
{% endif %}{% endif %}{% endfor %}
{% endblock %}


{### show ip int brief include-secondary vrf all ###}
{% block show_ip_int_brief %}
{{ super() }}
{% for intf in flt_svc_intf %}{% if intf.type == "layer3" %}
      {{ intf.intf_num | replace('Ethernet','Eth') }}:
        prefix: {{ intf.ip_vlan |ipaddr('address') }}
        tenant: {{ intf.tenant }}
        proto-state: up
        link-state: up
        admin-state: up
{% endif %}{% endfor %}
{% endblock %}


{### show interface status ###}
{% block show_int_status%}{% if bse.device_name.spine not in inventory_hostname %}
  - show interface status:
{% for intf in flt_svc_intf %}
{% if 'Port-channel' in intf.intf_num %}
      {{ intf.intf_num | replace('Port-channel','port-channel') }}:
{% else %}
      {{ intf.intf_num  }}:
{% endif %}
        name: {{ intf.descr }}
        state: connected
{% if intf.type == "layer3" %}
        vlan: routed
{% elif intf.type == "access" %}
        vlan: "{{ intf.ip_vlan }}"
{% else %}
        vlan: trunk
{% endif %}{% endfor %}
{% endif %}{% endblock %}