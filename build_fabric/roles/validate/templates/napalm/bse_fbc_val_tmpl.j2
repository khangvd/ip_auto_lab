{##### From the input variables generates a validation file (expected state) used by napalm_validate  to validate actual state #####}
{####### Validates the fabric, so the configuration as applied from fabric.yml by fabric role ######}
{########## Block statements inherit cmd validation info from the svc_tnt_val_tmpl.j2 template  #########}

{# Macro used as need to use the same block more than once #}
{%- macro macro_get_bgp_neighbors() -%}
{% block get_bgp_neighbors %}{% endblock %}
{%- endmacro -%}


{### get_facts ###}
- get_facts:
    hostname: {{ inventory_hostname }}

{### get_lldp_neighbors ###}
- get_lldp_neighbors:
{% for intf, descr in intf_fbc.items() %}
{# {% for intf, descr in hostvars['DC1-N9K-BORDER02'].intf_fbc.items() %} #}  {#For testing in python #}
    {{ intf }}:
      - hostname: {{ descr.split(' ')[2] + '.' + bse.services.domain }}
        port: {{ fbc.adv.bse_intf.intf_fmt + (descr.split(' ')[3] | replace(fbc.adv.bse_intf.intf_short, '')) }}
{% endfor %}

{### get_bgp_neighbors ###}
- get_bgp_neighbors:
    global:
      router_id: {{ intf_lp[0].ip |ipaddr('address')  }}
      peers:
        _mode: strict
{% if bse.device_name.spine in inventory_hostname %}
{% for x in groups[bse.device_name.leaf.split('-')[-1].lower()] + groups[bse.device_name.border.split('-')[-1].lower()] %}
        {{ hostvars[x].intf_lp[0].ip |ipaddr('address') }}:
          is_enabled: true
          is_up: true
{{ macro_get_bgp_neighbors() }}
{% endfor %} {% else %}
{% for x in groups[bse.device_name.spine.split('-')[-1].lower()] %}
        {{ hostvars[x].intf_lp[0].ip |ipaddr('address') }}:
          is_enabled: true
          is_up: true
{{ macro_get_bgp_neighbors() }}
{% endfor %} {% endif %}

{### ping: Gets all loopback addresses from host_vars. Disabled as takes too long ###}
{# {% for x in groups['all'] %}
- ping:
    _name: ping RTR loopback {{ x }}
    _kwargs:
      destination: {{ hostvars[x].intf_lp[0].ip |ipaddr('address') }}
      count: 3
    success:
      packet_loss: 0
    _mode: strict
{% endfor %}
{% for x in groups[bse.device_name.leaf.split('-')[-1].lower()] + groups[bse.device_name.border.split('-')[-1].lower()] %}
- ping:
    _name: ping VTEP loopback {{ x }}
    _kwargs:
      destination: {{ hostvars[x].intf_lp[1].ip |ipaddr('address') }}
      count: 3
    success:
      packet_loss: 0
    _mode: strict
- ping:
    _name: ping MLAG loopback {{ x }}
    _kwargs:
      destination: {{ hostvars[x].intf_lp[1].mlag_lp_addr |ipaddr('address') }}
      count: 3
    success:
      packet_loss: 0
    _mode: strict
{% endfor %}
{% for x in groups['border'] %}
- ping:
    _name: ping BGW loopback: {{ x }}
    _kwargs:
      destination: {{ hostvars[x].intf_lp[2].ip |ipaddr('address') }}
      count: 3
    success:
      packet_loss: 0
    _mode: strict
{% endfor %} #}
