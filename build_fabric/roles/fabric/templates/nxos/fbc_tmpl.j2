{####### Loopback interfaces #######}
{% for lp in intf_lp %}
interface {{ lp.name }}
  description {{ lp.descr }}
  ip address {{ lp.ip }}
{% if lp |length  == 4 %}
  ip address {{ lp.mlag_lp_addr }} secondary
{% endif %}
  ip router ospf {{ fbc.route.ospf.pro }} area {{ fbc.route.ospf.area }}
  no shutdown
{% endfor %}
{# Not in base template as is dependant on loopback existing #}
logging source-interface {{ bse.services.src_int }}

{####### Fabric interfaces #######}
{% for intf, descr in intf_fbc.items() %}
interface {{ intf }}
  description {{ descr }}
  no switchport
  medium p2p
  ip unnumbered {{ intf_lp[0]['name'] }}
  ip router ospf {{ fbc.route.ospf.pro }} area {{ fbc.route.ospf.area }}
  no shutdown
{% endfor %}

{####### VPC Configuration #######}
{% if bse.device_name.spine not in inventory_hostname %}
vlan {{ fbc.adv.mlag.peer_vlan }}
  name special_svi_over_peer-link
interface Vlan {{ fbc.adv.mlag.peer_vlan }}
  description special_svi_over_peer-link
  no shutdown
  medium p2p
  no ip redirects
  ip address {{ mlag_peer_ip }}
  no ipv6 redirects
  ip router ospf {{ fbc.route.ospf.pro }} area {{ fbc.route.ospf.area }}

vpc domain {{ fbc.adv.mlag.domain }}
  peer-switch
{# Devices with odd hostname get lowest VPV priority #}
{% if inventory_hostname[-2:]|int is odd %}
  role priority 8192
{# Keepalive peer uses mgmt interface with IP worked out based on odd/even name (add/minus +1) #}
  peer-keepalive destination {{ ansible_host | ipmath(1) }} source {{ ansible_host }}
{% else %}
  role priority 16384
  peer-keepalive destination {{ ansible_host | ipmath(-1) }} source {{ ansible_host }}
{% endif %}
  peer-gateway
  auto-recovery
  ip arp synchronize

{####### VPC Interfaces #######}
{% for intf, descr in intf_mlag.items() %}
interface {{ intf }}
  description {{ descr }}
  switchport
  spanning-tree port type network
{% if fbc.adv.bse_intf.ec_fmt in intf %}
  switchport mode trunk
  switchport trunk allowed vlan 1-4094
  vpc peer-link
{% else %}
  channel-group {{ fbc.adv.mlag.peer_po }} force mode active
{% endif %}
  no shutdown
{% endfor %}

{####### VXLAN Configuration #######}
interface nve1
  advertise virtual-rmac
  no shutdown
  host-reachability protocol bgp
  source-interface {{ intf_lp[1]['name'] }}
{# Only adds the leafs as they are the only devices with SVIs  #}
fabric forwarding anycast-gateway-mac {{ fbc.acast_gw_mac }}
{% endif %}

{####### Routing Configuration #######}
router ospf {{ fbc.route.ospf.pro }}
 router-id {{ intf_lp[0]['ip'].split('/') | first }}

router bgp {{ fbc.route.bgp.as_num }}
  router-id {{ intf_lp[0]['ip'].split('/') | first }}
  address-family l2vpn evpn
{% if bse.device_name.spine not in inventory_hostname %}
    advertise-pip
{% endif %}
    retain route-target all
  template peer FABRIC
    remote-as {{ fbc.route.bgp.as_num }}
    update-source {{ intf_lp[0]['name'] }}
    timers 3 9
    address-family ipv4 unicast
      send-community
      send-community extended
      soft-reconfiguration inbound
{# Spines need to be Route Reflectors #}
{% if bse.device_name.spine in inventory_hostname %}
      route-reflector-client
{% endif %}
    address-family l2vpn evpn
      send-community
      send-community extended
{% if bse.device_name.spine in inventory_hostname %}
      route-reflector-client
{% endif %}
{% if bse.device_name.spine in inventory_hostname %}
{# loop through the leaf and border groups and get loopback hostvar #}
{% for dvc in groups[bse.device_name.leaf.split('-')[-1].lower()] + groups[bse.device_name.border.split('-')[-1].lower()] %}
  neighbor {{ hostvars[dvc]['intf_lp'][0]['ip'] |ipaddr('address') }}
    description {{ dvc }}
    inherit peer fabric_peering
{% endfor %} {% else %}
{% for sp in groups[bse.device_name.spine.split('-')[-1].lower()] %}
  neighbor {{ hostvars[sp]['intf_lp'][0]['ip'] |ipaddr('address') }}
    description {{ sp }}
    inherit peer fabric_peering
{% endfor %} {% endif %}