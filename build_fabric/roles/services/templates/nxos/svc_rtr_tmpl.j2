{################################################# Service: Tenant Routing #################################################}


{### Create all the Prefix-lists ###}
ip prefix-list {{ svc_rtr.adv.bgp.naming.pl_allow }} seq 5 permit 0.0.0.0/0 le 32
ip prefix-list {{ svc_rtr.adv.bgp.naming.pl_default }} seq 5 permit 0.0.0.0/0
ip prefix-list {{ svc_rtr.adv.bgp.naming.pl_deny }} seq 5 deny 0.0.0.0/0 le 32
{% for pfx in flt_svc_rtr[0] %}
ip prefix-list {{ pfx[0] }} seq {{ pfx[1] }} {{ pfx[2] }} {{ pfx[3] }}
{% endfor %}

{### Create all the Route-maps ###}
{% for rm in flt_svc_rtr[1] %}
route-map {{ rm[0] }} permit {{ rm[1] }}
{% if 'conn' in rm[0] %}
  match interface {{ rm[2] }}
{% elif rm[2] != None %}
  match ip address prefix-list {{ rm[2] }}
{% endif %}{% if rm[3][0] == 'weight' %}
  set weight {{ rm[3][1] }}
{% elif rm[3][0] == 'pref' %}
  set local-preference {{ rm[3][1] }}
{% elif rm[3][0] == 'med' or rm[3][0] == 'metric' %}
  set metric {{ rm[3][1] }}
{% elif rm[3][0] == 'as_prepend' %}
  set as-path prepend {{ rm[3][1] * ((fbc.route.bgp.as_num | string) + ' ') }}
{% endif %}{% endfor %}


router bgp {{ fbc.route.bgp.as_num }}
{### Create all the peer templates ###}
{% for grp in flt_svc_rtr[2].values() %}
  template peer {{ grp.name}}
{% if grp.remote_as is defined %}
    remote-as {{ grp.remote_as }}
{% endif %}{% if grp.timers is defined %}
    timers {{ grp.timers[0] }} {{ grp.timers[1] }}
{% endif %}{% if grp.bfd is defined %}
    bfd
{% endif %}{% if grp.ebgp_multihop is defined %}
    ebgp-multihop {{ grp.ebgp_multihop }}
{% endif %}{% if grp.password is defined %}
    password {{ grp.password }}
{% endif %}{% if grp.update_source is defined %}
    update-source {{ grp.update_source }}
{% endif %}
    address-family ipv4 unicast
      send-community
      send-community extended
      soft-reconfiguration inbound
{% if grp.default is defined %}
      default-originate
{% endif %}{% if grp.inbound_rm is defined %}
      route-map {{ grp.inbound_rm }} in
{% endif %}{% if grp.outbound_rm is defined %}
      route-map {{ grp.outbound_rm }} out
{% endif %}{% if grp.next_hop_self  is defined  %}
      next-hop-self
{% endif %}{% endfor %}

{### Create all the peers ###}
{% for vrf, peer in flt_svc_rtr[3].items() %}
  vrf {{ vrf }}
{% for pr in peer %}
    neighbor {{ pr.peer_ip }}
      inherit peer {{ pr.grp }}
      description {{ pr.description }}
{% if pr.remote_as is defined %}
      remote-as {{ pr.remote_as }}
{% endif %}{% if pr.timers is defined %}
      timers {{ pr.timers[0] }} {{ pr.timers[1] }}
{% endif %}{% if pr.bfd is defined %}
      bfd
{% endif %}{% if pr.ebgp_multihop is defined %}
      ebgp-multihop {{pr.ebgp_multihop }}
{% endif %}{% if pr.password is defined %}
      password {{ pr.password }}
{% endif %}{% if pr.update_source is defined %}
      update-source {{ pr.update_source }}
{% endif %}
      address-family ipv4 unicast
{% if pr.default is defined %}
        default-originate
{% endif %}{% if pr.inbound_rm is defined %}
        route-map {{ pr.inbound_rm }} in
{% endif %}{% if pr.outbound_rm is defined %}
        route-map {{ pr.outbound_rm }} out
{% endif %}{% if pr.next_hop_self  is defined  %}
        next-hop-self
{% endif %}{% endfor %}{% endfor %}

{### Create network, summary and redistribution per vrf ###}

{% for vrf, cfg in flt_svc_rtr[4].items() %}
  vrf {{ vrf }}
    address-family ipv4 unicast
{% if cfg.network is defined %}{% for pfx in cfg.network %}
      network {{ pfx }}
{% endfor %}{% endif %}
{% if cfg.summary is defined %}{% for pfx, attr in cfg.summary.items() %}
      aggregate-address {{ pfx }} {{ attr }}
{% endfor %}{% endif %}
{% if cfg.redist is defined %}{% for each_redist in cfg.redist %}
      redistribute {{ each_redist.type | replace('connected', 'direct') }} route-map {{ each_redist.rm_name }}
{% endfor %}{% endif %}
{% endfor %}


{### Create the OSPF process ###}
{% for ospf_proc, ospf_cfg in flt_svc_rtr[5].items() %}
router ospf {{ ospf_proc }}
{% if ospf_cfg.rid is defined %}
  router-id {{ ospf_cfg.rid }}
{% endif %}{% if ospf_cfg.bfd is sameas true %}
  bfd
{% endif %}{% if ospf_cfg.area_type is defined %}{% for area, type in ospf_cfg.area_type.items() %}
  area {{ area }} {{ type }}
{% endfor %}{% endif %}{% if ospf_cfg.default_orig is defined %}
  default-information originate {{ ospf_cfg.default_orig }}
{% endif %}{% if ospf_cfg.summary is defined %}
{% for each_smry in ospf_cfg.summary %}{% if each_smry.area is defined %}
{% for pfx, attr in each_smry.prefix.items() %}
  area {{ each_smry.area }} range {{ pfx }} {{ attr }}
{% endfor %}{% else %}{% for pfx, attr in each_smry.prefix.items() %}
  summary-address {{ pfx }} {{ attr }}
{% endfor %}{% endif %}{% endfor %}
{% endif %}{% if ospf_cfg.auth is defined %}{% for each_area in ospf_cfg.auth %}
  area {{ each_area }} authentication message-digest
{% endfor %}{% endif %}
  passive-interface default
  vrf {{ ospf_cfg.tenant }}
{% if ospf_cfg.redist is defined %}{% for each_redist in ospf_cfg.redist %}
  redistribute {{ each_redist.type | replace('connected', 'direct') }} route-map {{ each_redist.rm_name }}
{% endfor %}{% endif %}
{% endfor %}

{### Create the OSPF interfaces config ###}
{% for intf, ospf_cfg in flt_svc_rtr[6].items() %}
interface {{ intf }}
{% if ospf_cfg.type is defined %}
  medium p2p
{% endif %}{% if ospf_cfg.authetication is defined %}
  ip ospf message-digest-key 1 md5 3 {{ ospf_cfg.authetication }}
{% endif %}{% if ospf_cfg.cost is defined %}
  ip ospf cost {{ ospf_cfg.cost }}
{% endif %}{% if ospf_cfg.timers is defined %}
  ip ospf bfd disable
  ip ospf hello-interval {{ ospf_cfg.timers[0] }}
  ip ospf dead-interval {{ ospf_cfg.timers[1] }}
{% endif %}{% if ospf_cfg.passive is defined %}
  no ip ospf passive-interface
{% endif %}
  ip router ospf {{ ospf_cfg.proc }} area {{ ospf_cfg.area }}
{% endfor %}

{### Create the static routes ###}
{% for vrf, route in flt_svc_rtr[7].items() %}
vrf context {{ vrf }}
{% for each_rte in route %}
{% if each_rte.next_hop_vrf is defined %}
  ip route {{ each_rte.prefix }} {{ each_rte.interface }} {{ each_rte.gateway }}  vrf {{ each_rte.next_hop_vrf }} {{ each_rte.ad }}
{% else %}
  ip route {{ each_rte.prefix }} {{ each_rte.interface }} {{ each_rte.gateway }} {{ each_rte.ad }}
{% endif %}{% endfor %}{% endfor %}